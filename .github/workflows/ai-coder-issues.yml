name: AI Coder (issues)

on:
  issues:
    types: [opened, edited, reopened, labeled]

permissions:
  contents: write
  pull-requests: write

jobs:
  from-issue:
    if: contains(github.event.issue.labels.*.name, 'agent-task')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Extract task from Issue
        id: task
        run: |
          echo "TASK<<'EOF'" >> $GITHUB_OUTPUT
          echo "${{ github.event.issue.title }}" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "${{ github.event.issue.body }}" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r tools/requirements.txt

      - name: Run AI Coder
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_MODEL: ${{ secrets.OPENAI_MODEL }}
          TASK: ${{ steps.task.outputs.TASK }}
          GITHUB_RUN_ID: ${{ github.run_id }}
        run: python tools/ai_coder.py

      - name: Ensure at least one changed file
        run: |
          mkdir -p tools
          echo "issue ${{ github.event.issue.number }} run $GITHUB_RUN_ID" >> tools/.ai-keepalive.txt

      - name: Commit & push branch
        env:
          BRANCH: ai/issue-${{ github.event.issue.number }}-${{ github.run_id }}
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git checkout -b "$BRANCH"
          git add -A
          if git diff --cached --quiet; then
            echo "No changes to commit."
            exit 0
          fi
          git commit -m "ai(issue #${{ github.event.issue.number }}): ${{ github.event.issue.title }}"
          git push origin "$BRANCH"

      - name: Open PR
        uses: actions/github-script@v7
        with:
          script: |
            const {owner, repo} = context.repo;
            const head = `ai/issue-${process.env.GITHUB_EVENT.issue.number}-${process.env.GITHUB_RUN_ID}`;
            const res = await github.rest.pulls.create({
              owner, repo,
              title: `AI: ${context.payload.issue.title}`,
              head, base: 'main',
              body: `From issue #${context.payload.issue.number}\n\n${context.payload.issue.body}`
            });
            await github.rest.issues.createComment({
              owner, repo,
              issue_number: context.payload.issue.number,
              body: `PR opened: ${res.data.html_url}`
            })
