name: AI Coder (manual)

on:
  workflow_dispatch:
    inputs:
      task:
        description: "Describe what you want the AI to build"
        required: true

permissions:
  contents: write
  pull-requests: write
  workflows: write

jobs:
  ai-coder:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r tools/requirements.txt

      - name: Run AI Coder
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_MODEL: ${{ secrets.OPENAI_MODEL }}
          TASK: ${{ inputs.task }}
          GITHUB_RUN_ID: ${{ github.run_id }}
        run: python tools/ai_coder.py

      - name: Ensure at least one changed file
        run: |
          mkdir -p tools
          echo "run $GITHUB_RUN_ID" >> tools/.ai-keepalive.txt

      - name: Show git status (did AI write files?)
        run: |
          git status --porcelain || true
          git diff --stat || true

      - name: Commit changes to a new branch
        env:
          BRANCH: ai/${{ github.run_id }}
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git checkout -b "$BRANCH"
          git add -A
          if git diff --cached --quiet; then
            echo "NO_CHANGES=1" >> $GITHUB_ENV
            echo "No changes to commit."
          else
            git commit -m "ai: ${{ inputs.task }}"
            git push origin "$BRANCH"

      - name: Create Pull Request
        if: env.NO_CHANGES != '1'
        uses: actions/github-script@v7
        id: pr
        with:
          script: |
            const { owner, repo } = context.repo;
            const branch = `ai/${process.env.GITHUB_RUN_ID}`;
            const res = await github.rest.pulls.create({
              owner,
              repo,
              title: `AI: ${process.env.GITHUB_EVENT_WORKFLOW_DISPATCH === 'true' ? '' : ''}${{ inputs.task }}`,
              head: branch,
              base: 'main',
              body: `This PR was generated by the AI Coder workflow.\n\n**Task:** ${{ inputs.task }}`
            });
            core.setOutput('number', res.data.number);
            core.setOutput('url', res.data.html_url);

      - name: Print PR info
        if: env.NO_CHANGES != '1'
        run: |
          echo "pull-request-number=${{ steps.pr.outputs.number }}"
          echo "pull-request-url=${{ steps.pr.outputs.url }}"
