{
  "plan": "Add a new GET /v1/ping endpoint to the API that returns a simple 'pong' response. Implement a Jest test to verify the endpoint's functionality. Update the README with an example of how to use the endpoint.",
  "files": [
    {
      "path": "apps/api/index.js",
      "content": "const express = require('express');\nconst app = express();\n\napp.get('/v1/ping', (req, res) => {\n  res.json({ message: 'pong' });\n});\n\nconst PORT = process.env.PORT || 3000;\napp.listen(PORT, () => {\n  console.log(`Server is running on port ${PORT}`);\n});\n\nmodule.exports = app;"
    },
    {
      "path": "apps/api/__tests__/ping.test.js",
      "content": "const request = require('supertest');\nconst app = require('../index');\n\ndescribe('GET /v1/ping', () => {\n  it('should return pong', async () => {\n    const res = await request(app).get('/v1/ping');\n    expect(res.statusCode).toEqual(200);\n    expect(res.body).toHaveProperty('message', 'pong');\n  });\n});"
    },
    {
      "path": "README.md",
      "content": "# API Documentation\n\n## Endpoints\n\n### GET /v1/ping\n\nReturns a simple 'pong' message.\n\n#### Example\n\n```bash\ncurl http://localhost:3000/v1/ping\n```\n\n#### Response\n\n```json\n{\n  \"message\": \"pong\"\n}\n```"
    },
    {
      "path": "package.json",
      "content": "{\n  \"name\": \"api\",\n  \"version\": \"1.0.0\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"start\": \"node apps/api/index.js\",\n    \"test\": \"jest\"\n  },\n  \"dependencies\": {\n    \"express\": \"^4.17.1\"\n  },\n  \"devDependencies\": {\n    \"jest\": \"^29.0.0\",\n    \"supertest\": \"^6.1.3\"\n  }\n}"
    }
  ],
  "commit_message": "Add GET /v1/ping endpoint with Jest test and README example",
  "pr_title": "Add GET /v1/ping endpoint",
  "pr_body": "This PR adds a new GET /v1/ping endpoint to the API. It includes a Jest test to verify the endpoint's functionality and updates the README with an example of how to use the endpoint."
}