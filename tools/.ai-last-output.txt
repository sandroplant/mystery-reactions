```json
{
  "plan": "Create a minimal FastAPI app in /apps/media with a single endpoint GET /presign. Add a Dockerfile.ffmpeg for a worker with ffmpeg installed. Include a pytest smoke test for the FastAPI app.",
  "files": [
    {
      "path": "apps/media/app/main.py",
      "content": "from fastapi import FastAPI\n\napp = FastAPI()\n\n@app.get('/presign')\ndef read_presign():\n    return {\"ok\": true, \"url\": \"demo\"}\n"
    },
    {
      "path": "apps/media/Dockerfile.ffmpeg",
      "content": "FROM ubuntu:20.04\n\nRUN apt-get update && \\\n    apt-get install -y ffmpeg && \\\n    rm -rf /var/lib/apt/lists/*\n"
    },
    {
      "path": "apps/media/tests/test_main.py",
      "content": "from fastapi.testclient import TestClient\nfrom app.main import app\n\ndef test_read_presign():\n    client = TestClient(app)\n    response = client.get('/presign')\n    assert response.status_code == 200\n    assert response.json() == {\"ok\": true, \"url\": \"demo\"}\n"
    }
  ],
  "commit_message": "Add FastAPI app with /presign endpoint and Dockerfile.ffmpeg",
  "pr_title": "Add FastAPI app and Dockerfile.ffmpeg",
  "pr_body": "This PR introduces a minimal FastAPI application in the /apps/media directory with a single endpoint, GET /presign, returning a JSON response. Additionally, it adds a Dockerfile.ffmpeg to set up a worker with ffmpeg installed. A pytest smoke test is included to verify the FastAPI endpoint."
}
```