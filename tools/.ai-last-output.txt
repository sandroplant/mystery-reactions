```json
{
  "plan": "Re-generate /apps/api with a minimal NestJS project. Add a health check endpoint and Jest configuration with tests.",
  "files": [
    {
      "path": "apps/api/package.json",
      "content": "{\n  \"name\": \"api\",\n  \"version\": \"0.0.1\",\n  \"description\": \"API service\",\n  \"main\": \"dist/main.js\",\n  \"scripts\": {\n    \"start\": \"nest start\",\n    \"build\": \"nest build\",\n    \"test\": \"jest\"\n  },\n  \"dependencies\": {\n    \"@nestjs/common\": \"^9.0.0\",\n    \"@nestjs/core\": \"^9.0.0\",\n    \"@nestjs/platform-express\": \"^9.0.0\",\n    \"reflect-metadata\": \"^0.1.13\",\n    \"rxjs\": \"^7.0.0\"\n  },\n  \"devDependencies\": {\n    \"@nestjs/cli\": \"^9.0.0\",\n    \"@nestjs/schematics\": \"^9.0.0\",\n    \"@nestjs/testing\": \"^9.0.0\",\n    \"@types/jest\": \"^29.0.0\",\n    \"@types/node\": \"^18.0.0\",\n    \"jest\": \"^29.0.0\",\n    \"ts-jest\": \"^29.0.0\",\n    \"ts-loader\": \"^9.0.0\",\n    \"ts-node\": \"^10.0.0\",\n    \"typescript\": \"^4.0.0\"\n  }\n}\n"
    },
    {
      "path": "apps/api/tsconfig.json",
      "content": "{\n  \"compilerOptions\": {\n    \"module\": \"commonjs\",\n    \"target\": \"es2017\",\n    \"lib\": [\"es2017\"],\n    \"declaration\": true,\n    \"sourceMap\": true,\n    \"outDir\": \"./dist\",\n    \"strict\": true,\n    \"moduleResolution\": \"node\",\n    \"esModuleInterop\": true,\n    \"experimentalDecorators\": true,\n    \"emitDecoratorMetadata\": true\n  },\n  \"include\": [\"src/**/*\"],\n  \"exclude\": [\"node_modules\", \"dist\"]\n}\n"
    },
    {
      "path": "apps/api/src/main.ts",
      "content": "import { NestFactory } from '@nestjs/core';\nimport { AppModule } from './app.module';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n  await app.listen(3000);\n}\nbootstrap();\n"
    },
    {
      "path": "apps/api/src/app.module.ts",
      "content": "import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\n\n@Module({\n  imports: [],\n  controllers: [AppController],\n  providers: [],\n})\nexport class AppModule {}\n"
    },
    {
      "path": "apps/api/src/app.controller.ts",
      "content": "import { Controller, Get } from '@nestjs/common';\n\n@Controller()\nexport class AppController {\n  @Get('healthz')\n  getHealth(): { ok: boolean } {\n    return { ok: true };\n  }\n}\n"
    },
    {
      "path": "apps/api/jest.config.js",
      "content": "module.exports = {\n  moduleFileExtensions: ['js', 'json', 'ts'],\n  rootDir: 'src',\n  testRegex: '.*\\.spec\\.ts$',\n  transform: {\n    '^.+\\.(t|j)s$': 'ts-jest',\n  },\n  collectCoverageFrom: ['**/*.(t|j)s'],\n  coverageDirectory: '../coverage',\n  testEnvironment: 'node',\n};\n"
    },
    {
      "path": "apps/api/src/app.controller.spec.ts",
      "content": "import { Test, TestingModule } from '@nestjs/testing';\nimport { AppController } from './app.controller';\n\ndescribe('AppController', () => {\n  let appController: AppController;\n\n  beforeEach(async () => {\n    const app: TestingModule = await Test.createTestingModule({\n      controllers: [AppController],\n    }).compile();\n\n    appController = app.get<AppController>(AppController);\n  });\n\n  describe('getHealth', () => {\n    it('should return { ok: true }', () => {\n      expect(appController.getHealth()).toEqual({ ok: true });\n    });\n  });\n});\n"
    },
    {
      "path": "apps/api/src/main.spec.ts",
      "content": "import { Test, TestingModule } from '@nestjs/testing';\nimport { INestApplication } from '@nestjs/common';\nimport * as request from 'supertest';\nimport { AppModule } from './app.module';\n\ndescribe('AppController (e2e)', () => {\n  let app: INestApplication;\n\n  beforeAll(async () => {\n    const moduleFixture: TestingModule = await Test.createTestingModule({\n      imports: [AppModule],\n    }).compile();\n\n    app = moduleFixture.createNestApplication();\n    await app.init();\n  });\n\n  it('/GET healthz', () => {\n    return request(app.getHttpServer())\n      .get('/healthz')\n      .expect(200)\n      .expect({ ok: true });\n  });\n});\n"
    }
  ],
  "commit_message": "Initialize NestJS project with health check endpoint and tests",
  "pr_title": "Initialize NestJS API with health check",
  "pr_body": "This PR sets up a minimal NestJS project in /apps/api. It includes a health check endpoint at GET /healthz and Jest configuration with unit and e2e tests."
}
```