```json
{
  "plan": "Create a minimal FastAPI app in /apps/media with a single endpoint GET /presign. Add a Dockerfile.ffmpeg as a worker stub and a pytest smoke test to ensure the app runs correctly.",
  "files": [
    {
      "path": "apps/media/app/main.py",
      "content": "from fastapi import FastAPI\n\napp = FastAPI()\n\n@app.get('/presign')\nasync def presign():\n    return {\"ok\": true, \"url\": \"demo\"}\n"
    },
    {
      "path": "apps/media/Dockerfile.ffmpeg",
      "content": "FROM python:3.9-slim\n\nWORKDIR /app\n\nCOPY app /app\n\nRUN pip install fastapi uvicorn\n\nCMD [\"uvicorn\", \"main:app\", \"--host\", \"0.0.0.0\", \"--port\", \"8000\"]\n"
    },
    {
      "path": "apps/media/tests/test_smoke.py",
      "content": "from fastapi.testclient import TestClient\nfrom app.main import app\n\ndef test_presign():\n    client = TestClient(app)\n    response = client.get('/presign')\n    assert response.status_code == 200\n    assert response.json() == {\"ok\": true, \"url\": \"demo\"}\n"
    }
  ],
  "commit_message": "Add FastAPI app with /presign endpoint and Dockerfile.ffmpeg",
  "pr_title": "Add FastAPI app and Dockerfile.ffmpeg for media service",
  "pr_body": "This PR introduces a minimal FastAPI application under /apps/media with a single endpoint GET /presign. It also includes a Dockerfile.ffmpeg as a worker stub and a pytest smoke test to verify the endpoint."
}
```